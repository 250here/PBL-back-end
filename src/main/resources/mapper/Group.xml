<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pbl.backend.dao.GroupDao">

    <resultMap id="BaseResultMap" type="com.pbl.backend.entity.Group">
        <id column="group_id" property="groupId" jdbcType="INTEGER"/>
        <result column="project_id" property="projectId" jdbcType="INTEGER"/>
        <result column="group_name" property="groupName" jdbcType="VARCHAR"/>
        <result column="group_header" property="groupHeaderId" jdbcType="VARCHAR"/>

        <collection property="groupMembers" ofType="com.pbl.backend.entity.User"
                    column="{groupId=group_id}" select="getUsersByGroupId" javaType="java.util.ArrayList"/>
    </resultMap>

    <resultMap id="BaseUserGroupMap" type="com.pbl.backend.entity.User">
        <id column="user_id" property="id" jdbcType="VARCHAR"/>
        <result column="user_name" property="username" jdbcType="VARCHAR"/>
        <result column="user_password" property="password" jdbcType="VARCHAR"/>
        <result column="photo_path" property="photoPath" jdbcType="VARCHAR"/>
    </resultMap>
    
    <select id="getUsersByGroupId" resultMap="BaseUserGroupMap">
        select *
        from user left join user_group
        on user.user_id = user_group.user_id
        where user_group.group_id=#{groupId}
    </select>

<!--    int addPjGroup(Group group);-->
    <insert id="addPjGroup" parameterType="com.pbl.backend.entity.Group">
      insert into `grouping`(group_id,project_id,group_name,group_header)
        values(#{groupId},#{projectId},#{groupName},#{groupHeaderId})
    </insert>

<!--    //根据ProjectId获取所有小组信息-->
<!--    List<Group> getAllGroupsByPjId(@Param("projectId")int projectId);-->
    <select id="getAllGroupsByPjId" resultMap="BaseResultMap">
        select *
        from `grouping`
        where project_id=#{projectId}
    </select>

<!--    //根据GroupId获取小组信息-->
<!--    Group getGroupByGroupId(@Param("groupId")int groupId);-->
    <select id="getGroupByGroupId" resultMap="BaseResultMap">
        select *
        from `grouping`
        where group_id=#{groupId}
    </select>

<!--    //根据ProjectId和GroupName获取group-->
<!--    Group getGroupByPjIdAndName(@Param("projectId")int projectId, @Param("groupName")String groupName);-->
    <select id="getGroupByPjIdAndName" resultMap="BaseResultMap">
        select *
        from `grouping`
        where project_id=#{projectId} and group_name=#{groupName}
    </select>

<!--    //根据项目ID删除该项目所有小组信息-->
<!--    int deleteGroupsByProjectId(@Param("projectId")int projectId);-->
    <delete id="deleteGroupsByProjectId">
        delete from `grouping` where project_id=#{projectId}
    </delete>

<!--    int getGroupIdByGroupNameAndPjId(@Param("projectId")int projectId, @Param("groupName")String groupName);-->
    <select id="getGroupIdByGroupNameAndPjId" resultType="int">
        select group_id
        from `grouping`
        where project_id=#{projectId} and group_name=#{groupName}
    </select>
</mapper>