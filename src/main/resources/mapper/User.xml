<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--写对应的接口名-->
<mapper namespace="com.pbl.backend.dao.UserDao">

    <resultMap id="BaseResultMap" type="com.pbl.backend.entity.User">
        <id column="user_id" property="id" jdbcType="VARCHAR"/>
        <result column="user_name" property="username" jdbcType="VARCHAR"/>
        <result column="user_password" property="password" jdbcType="VARCHAR"/>
        <result column="photo_path" property="photoPath" jdbcType="VARCHAR"/>

        <association property="role" column="{id=user_id}"
                     javaType="com.pbl.backend.entity.Role" select="getRole"/>
    </resultMap>

    <resultMap id="roleMap" type="com.pbl.backend.entity.Role">
        <id column="role_id" property="id" jdbcType="INTEGER"/>
        <result column="role_name" property="name" jdbcType="VARCHAR"/>

    </resultMap>


<!--    User loadUserByUsername(@Param("userName")String userName);-->
    <select id="loadUserByUsername" resultMap="BaseResultMap">
        select *
        from [user]
        where user_name=#{userName}
    </select>

    <select id="getRole" parameterType="string" resultMap="roleMap">
        select *
        from user_role, role
        where user_id=#{id}
    </select>

<!--    Role findRoleByUserId(@Param("userId")Integer userId);-->
    <select id="findRoleByUserId" parameterType="int" resultMap="roleMap">
        select *
        from user_role, role
        where user_id=#{userId}
    </select>

<!--    void add(User user);-->
    <insert id="add" parameterType="com.pbl.backend.entity.User" useGeneratedKeys="true" keyProperty="userId">
        insert into [user](user_name,user_password)
        values(#{username},#{password})
    </insert>

<!--    void addRole(@Param("userId")String userId, @Param("roleId")int roleId);-->
    <insert id="addRole">
        insert into user_role(user_id,role_id)
        values(#{userId},#{roleId})
    </insert>


    <!--String getPassword(String userId)-->
    <select id="getPassword" resultType="String">
        select password from [user] where id = #{userId}
    </select>

    <!--Integer updatePasswordOFUser(String UserId, String passwordNew);-->
    <update id="updatePasswordOFUser">
        update [user] set [user](password) values(#{passwordNew}) where id = #{UserId}
    </update>

    <!--Integer uploadPhoto(String UserId, String photoPath)-->
    <insert id="uploadPhoto">
        insert into [user] (photo_path) values (#{photoPath}) where id = #{UserId}
    </insert>

    <!--void updatePhoto(String UserId, String photoPath);-->
    <update id="updatePhoto">
        update [user] set user(photo_path) values(#{photoPath}) where id = #{UserId}
    </update>

    <!--String getPhoto(String UserId)-->
    <select id="getPhoto" parameterType="String" resultType="String">
        select photo_path from [user] where id = #{UserId}
    </select>

</mapper>